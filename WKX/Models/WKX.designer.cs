#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WKX.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WKX")]
	public partial class WKXDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertVIP(VIP instance);
    partial void UpdateVIP(VIP instance);
    partial void DeleteVIP(VIP instance);
    #endregion
		
		public WKXDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["WKXConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public WKXDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WKXDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WKXDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WKXDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<VIP> VIP
		{
			get
			{
				return this.GetTable<VIP>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VIP")]
	public partial class VIP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _VIP_Name;
		
		private string _VIP_No;
		
		private string _IDCard;
		
		private string _StarTime;
		
		private string _LastTime;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnVIP_NameChanging(string value);
    partial void OnVIP_NameChanged();
    partial void OnVIP_NoChanging(string value);
    partial void OnVIP_NoChanged();
    partial void OnIDCardChanging(string value);
    partial void OnIDCardChanged();
    partial void OnStarTimeChanging(string value);
    partial void OnStarTimeChanged();
    partial void OnLastTimeChanging(string value);
    partial void OnLastTimeChanged();
    #endregion
		
		public VIP()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VIP_Name", DbType="NVarChar(50)")]
		public string VIP_Name
		{
			get
			{
				return this._VIP_Name;
			}
			set
			{
				if ((this._VIP_Name != value))
				{
					this.OnVIP_NameChanging(value);
					this.SendPropertyChanging();
					this._VIP_Name = value;
					this.SendPropertyChanged("VIP_Name");
					this.OnVIP_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VIP_No", DbType="NVarChar(50)")]
		public string VIP_No
		{
			get
			{
				return this._VIP_No;
			}
			set
			{
				if ((this._VIP_No != value))
				{
					this.OnVIP_NoChanging(value);
					this.SendPropertyChanging();
					this._VIP_No = value;
					this.SendPropertyChanged("VIP_No");
					this.OnVIP_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCard", DbType="NVarChar(50)")]
		public string IDCard
		{
			get
			{
				return this._IDCard;
			}
			set
			{
				if ((this._IDCard != value))
				{
					this.OnIDCardChanging(value);
					this.SendPropertyChanging();
					this._IDCard = value;
					this.SendPropertyChanged("IDCard");
					this.OnIDCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StarTime", DbType="NVarChar(50)")]
		public string StarTime
		{
			get
			{
				return this._StarTime;
			}
			set
			{
				if ((this._StarTime != value))
				{
					this.OnStarTimeChanging(value);
					this.SendPropertyChanging();
					this._StarTime = value;
					this.SendPropertyChanged("StarTime");
					this.OnStarTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTime", DbType="NVarChar(50)")]
		public string LastTime
		{
			get
			{
				return this._LastTime;
			}
			set
			{
				if ((this._LastTime != value))
				{
					this.OnLastTimeChanging(value);
					this.SendPropertyChanging();
					this._LastTime = value;
					this.SendPropertyChanged("LastTime");
					this.OnLastTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
